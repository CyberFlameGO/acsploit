from options import Options

f = None
n = -1
options = Options()
options.add_option('order',2, 'Order n of linear program')
options.add_option('epsilon',2, 'Choice of epsilon')
options.add_option('stretch', 10, 'Choice of distortion of simplex')
options.add_option('pivot_type','largest coefficient','Choice of pivot rule')
def run(generator, output): #generates worst case input to the classic simplex algorithm (as shown by Klee and Minty)
    ret = get_simplex(int(options['order']), float(options['epsilon']),float(options['stretch']))
    output.output(ret)

def get_simplex(order,epsilon,stretch):
    c=[0 for x in range(order)]
    A=[[0 for x in range(order)] for y in range(order)]
    b=[0 for x in range(order)]
    A[0][0]=1
    for i in range(order):
        c[i]=-epsilon **(order-i-1)
        A[i][i]=1
        for j in xrange(0,i):
            if i>0:
                A[i][j]=2* epsilon ** (i-j)
        b[i]=stretch**(i)
    outputs=[]
    outputs.append(c)
    outputs.append(A)
    outputs.append(b)
    return outputs