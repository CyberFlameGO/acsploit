from options import Options

f = None
n = -1
options = Options()
options.add_option('order',2, 'Order n of linear program')
options.add_option('mu',3, 'Choice of mu>=3. Epsilon= 1/mu')
options.add_option('pivot_type','largest_coefficient','Choice of pivot rule',['largest_coefficient', 'smallest_index', ])

# Examples taken from Linear Programming: Klee-Minty Examples by KONSTANTINOS PAPARRIZOS1,NIKOLAOS SAMARAS1 by
# DIMITRIOS ZISSOPOULOS2

def run(generator, output): #generates worst case input to the classic simplex algorithm (as shown by Klee and Minty)
    ret = get_simplex(int(options['order']), float(options['mu']),options['pivot_type'])
    output.output(ret)

def get_simplex(order,mu,pivotType):
    if pivotType=='smallest_index':
        mu=1/mu #convert mu to epsilon
    c=[0 for x in range(order)]
    A=[[0 for x in range(order)] for y in range(order)]
    b=[1 for x in range(order)]
    A[0][0]=1
    for i in range(order):
        c[i]=-mu **(order-i-1)
        A[i][i]=1
        for j in range(0,i):
            if i>0:
                A[i][j]=2* mu ** (i-j)
        if pivotType=='largest_coefficient':
            b[i]=mu**(2*i)
    outputs=[]
    outputs.append(c)
    outputs.append(A)
    outputs.append(b)
    return outputs