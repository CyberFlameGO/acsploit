from options import Options
import os

options = Options()
options.add_option('file_format', "sh", 'Format for fork bomb', ['bash', 'bat', 'c', 'cc', 'cs', 'erl', 'fasm', 'go',
                                                                 'hs', 'html', 'java', 'js', 'lsp', 'lua', 'mdb', 'php',
                                                                 'pl', 'py', 'r', 'rb', 'rs', 's', 'scm', 'sh', 'vbs'])

DESCRIPTION = 'Produces a forkbomb in one of many formats'


def run(generator, output):
    if (output.OUTPUT_NAME != "file") or (output.options['format'] != 'plaintext') or (output.options['final_newline']):
        raise ValueError("Output must be file with plaintext type, and no newline")
    ret = forkbomb(options['file_format'])
    output.output([ret])


def forkbomb(format_name):  # finds a forkbomb of the given format and returns it as a file. Forkbombs found at https://github.com/aaronryank/fork-bomb/
        forkbombfilename= "fork-bomb." + format_name
        with open(os.path.dirname(os.path.realpath(__file__)) + "/forkbombs/" + forkbombfilename, 'r') as forkbombfile:
            forkbomb = forkbombfile.read()
        return forkbomb