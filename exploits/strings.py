from input import Generator

class StringsExploit():

    options = dict({'algorithm': 'rabinkarp','pattern_length': 5,'string_length' : 10})

    def run(self, generator):
        if self.options['algorithm']=='rabinkarp':
            print(self.RabinKarp(generator, input(self.options['string_length'])))
        elif self.options['algorithm']=='kmp': #Knuth-Morris-Pratt
            print(self.KMP(generator,input(self.options['string_length']), input(self.options['pattern_length'])))


    def KMP( self, generator, string_length, pattern_length):
         return
            

    # TODO: Check for other algorithms here
    def RabinKarp(self, generator, n_inputs):
        base = generator.get_min_value()[0]
        whole = base * n_inputs
        pattern = base * int(n_inputs / 2)
        return "String: " + whole + "\n\nSearch pattern: " + pattern
