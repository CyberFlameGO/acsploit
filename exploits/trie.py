from input import Generator
from acsploit import Exploit, Option

class TrieExploit(Exploit):
    @staticmethod
    def start_instance():
        prompt = TrieExploit()
        prompt.prompt = "exploit(trie)$ "
        prompt.cmdloop("Exploit Trie. Type \'options\' for current settings")

    def get_options(self):
        return dict({
            'n_inputs' : Option('n_inputs', 'int', 10)
        })

    def run(self, generator, options):
        print(self.exploit(generator, options['n_inputs'].value))

    def exploit(self, generator, n_inputs):
        output = [generator.get_max_value()]
        for i in range(1, n_inputs):
            output.append(generator.get_less_than(output[i - 1]))
        return output
