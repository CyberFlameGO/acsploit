import z3
from options import Options
from .z3_common import get_collisions


options = Options()
options.add_option('n_collisions', 10, 'Number of colliding strings to create')
options.add_option('length', 10, 'Length of strings to create')
options.add_option('hash_table_size', 100, 'Size of target hash table')
options.add_option('target_type', 'preimage', 'Whether the given target is a hash value, or a preimage',
                   ['image', 'preimage'])
options.add_option('target', 'hello', 'Image or preimage of desired hash value')

DESCRIPTION = 'Produces hash collisions for the simple byte summation hash function'

NO_INPUT = True


def run(output):
    ret = get_collisions(z3sum, options['target'], options['target_type'], options['length'],
                         options['n_collisions'], options['hash_table_size'])
    output.output(ret)


def z3sum(bytes, hash_table_size):  # computes the z3 form of the sum of all bytes in the string
    v1 = 0
    for byte in bytes:
        v1 += z3.ZeroExt(24, byte)
    return v1 % hash_table_size
