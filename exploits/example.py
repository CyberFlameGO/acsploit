from input import Generator
from acsploit import Exploit, Option

#name should be XExploit where X is the command the user will run
class ExampleExploit(Exploit):
	@staticmethod
	def start_instance():
		prompt = ExampleExploit()
		prompt.prompt = "exploit(example)$ " 
		prompt.cmdloop("Sample. Type \'options\' for current settings") #This is shown when the CLI is first opened

	def get_options(self):
		#	"key" : Option("key", "type", "default_value")
		#	To use an options, a user will enter <set key value>
		#	i.e. set isSomething true
		return dict({'key' : Option('key', 'string', 'value'), 
			'isSomething' : Option('isSomething', 'bool', True)})

	def run(self, generator, options):
		#generator is the input generator that the user has created
		#options will have the same key-value pairs as get_options, with values the user set
		#this function replaces the exploit function in the algorithm's class 
		print("I am exploiting things")