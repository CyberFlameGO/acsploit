import logging
from options import Options


options = Options()
options.add_option('operation', 'create', 'The heap operation', ['create', 'insert'])
options.add_option('n_elements', 10, 'Number of elements in heap')
options.add_option('type', 'max', 'Type of heap', ['min', 'max'])


def run(generator, output):
    op = options['operation']
    if op == 'create':
        if options['type'] == 'max':
            output.output(ascending_list(generator, options['n_elements']))
        elif options['type'] == 'min':
            output.output(descending_list(generator, options['n_elements']))
        else:
            logging.error('Not a valid option for \'type\'.')
            return
    elif op == 'insert':
        logging.warning('Not implemented yet :(')
        return
    else:
        logging.error('Not a valid option for \'operation\'.')
        return


def descending_list(generator, numnodes):
    output = [generator.get_max_value()]
    for i in range(1,numnodes):
        output.append(generator.get_less_than(output[i-1]))
    return output


def ascending_list(generator, numnodes):
    output = [generator.get_min_value()]
    for i in range(1,numnodes):
        output.append(generator.get_greater_than(output[i-1]))
    return output
